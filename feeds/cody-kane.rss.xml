<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Blog - Cody Kane</title><link>https://codykane.github.io/blog/</link><description></description><lastBuildDate>Mon, 12 Aug 2019 10:20:00 -0400</lastBuildDate><item><title>Natural Language Processing Text Generation using Markov Chains</title><link>https://codykane.github.io/blog/blog-5.html</link><description>&lt;p&gt;In this blog I'm going to use Markov chains to generate pseudo tweets from a cleaned dataset of tweets from a particular account, in my case Kanye West, but it could be any active Twitter account. If you're wondering how to get hte tweets and how to process them, my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cody Kane</dc:creator><pubDate>Mon, 12 Aug 2019 10:20:00 -0400</pubDate><guid isPermaLink="false">tag:codykane.github.io,2019-08-12:/blog/blog-5.html</guid><category>python</category></item><item><title>Downloading &amp; cleaning tweets from a Twitter Account</title><link>https://codykane.github.io/blog/blog-3.html</link><description>&lt;p&gt;First, you need to get an API key from twitter, to do this you'll need to register for a developer account and follow the steps. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Twitter API credentials&lt;/span&gt;
&lt;span class="n"&gt;consumer_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;consumer_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;access_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we're going to get the actual tweets in a csv format. Twitter allows for over 3000 of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cody Kane</dc:creator><pubDate>Sat, 27 Jul 2019 16:20:00 -0400</pubDate><guid isPermaLink="false">tag:codykane.github.io,2019-07-27:/blog/blog-3.html</guid><category>python</category><category>Twitter</category><category>Scraping</category><category>Cleaning</category><category>API</category><category>Tweepy</category></item><item><title>Principal Component Analysis for Dummies</title><link>https://codykane.github.io/blog/blog-5.html</link><description>&lt;p&gt;Data from the following link: https://archive.ics.uci.edu/ml/machine-learning-databases/ecoli/
The dataset was created by Kenta Nakai at the Institute of cellular and Molecular Biology in Osaka, Japan. It concerns the protein localization sites of E.coli subspecies. This is all secondary to my purpose of demonstrating …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cody Kane</dc:creator><pubDate>Sat, 27 Jul 2019 16:20:00 -0400</pubDate><guid isPermaLink="false">tag:codykane.github.io,2019-07-27:/blog/blog-5.html</guid><category>python</category><category>dimensionality reduction</category><category>visualization</category></item><item><title>LabelBinarizer &amp; LabelEncoder</title><link>https://codykane.github.io/blog/blog_2.html</link><description>&lt;p&gt;To avoid your machine learning model blowing up when you feed it data in production, it's necessary to give it numerical values, rather than categorical variables in the form of strings. There are a few different ways to go about this in your preprocessing flow, depending on whether the categories …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cody Kane</dc:creator><pubDate>Thu, 04 Jul 2019 10:30:00 -0400</pubDate><guid isPermaLink="false">tag:codykane.github.io,2019-07-04:/blog/blog_2.html</guid><category>python</category></item><item><title>Simplify with dictionary comprehension</title><link>https://codykane.github.io/blog/blog-1.html</link><description>&lt;p&gt;So far in my quest to learn python, the basics have been somewhat intuitive and straightforward to implement. Moving into more complex functions, it isn't simply if the code runs or not that matters, simplicity, specificity and ease of interpretation become important factors to be considered. Everyone who has toyed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cody Kane</dc:creator><pubDate>Sun, 16 Jun 2019 10:20:00 -0400</pubDate><guid isPermaLink="false">tag:codykane.github.io,2019-06-16:/blog/blog-1.html</guid><category>python</category></item></channel></rss>